{"ast":null,"code":"var _jsxFileName = \"/Users/ahmed/Documents/PrintLearning/fullstackopen-2021/Part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport SearchFilter from './components/SearchFilter';\nimport AddPeopleForm from './components/AddPeopleForm';\nimport Persons from './components/Persons';\nimport personService from './services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filteredPersons, setFilteredPersons] = useState([]);\n  useEffect(() => {\n    personService.getAll().then(peopleList => {\n      console.log(\"initial data\", peopleList);\n      setPersons(peopleList);\n      setFilteredPersons(peopleList);\n    });\n  }, []);\n\n  const handleNameChange = event => setNewName(event.target.value);\n\n  const handleNumberChange = event => setNewNumber(event.target.value);\n\n  const handleSearch = event => {\n    let searchEntry = event.target.value.toLowerCase();\n\n    if (searchEntry.length > 0) {\n      setFilteredPersons(persons.filter(person => person.name.toLowerCase().includes(searchEntry)));\n    } else {\n      setFilteredPersons([...persons]);\n    }\n  };\n\n  const checkDuplicatePerson = person => {\n    if (persons.find(p => p.name === person.name)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const concatPersonLists = personObject => {\n    setPersons(persons.concat(personObject));\n    setFilteredPersons(persons.concat(personObject));\n  };\n\n  const addPerson = event => {\n    const alertText = `${newName} already exists in the phonebook`;\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber\n    };\n\n    if (checkDuplicatePerson(personObject)) {\n      alert(alertText);\n    } else {\n      personService.create(personObject).then(personList => {\n        concatPersonLists(personList);\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  };\n\n  const deletePerson = id => {\n    personService.deleteObject(id).then(() => {\n      console.log(\"Deleting\");\n      setFilteredPersons(filteredPersons.filter(person => person.id !== id));\n      setPersons(filteredPersons);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchFilter, {\n      text: \"filter shown with\",\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: \"add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPeopleForm, {\n      handleNameChange: handleNameChange,\n      handleNumberChange: handleNumberChange,\n      addPerson: addPerson,\n      newName: newName,\n      newNumber: newNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      filteredPersons: filteredPersons,\n      deletePerson: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"iKwtdCjdWad7TZgiAPvr7kCyIwk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ahmed/Documents/PrintLearning/fullstackopen-2021/Part2/phonebook/src/App.js"],"names":["React","useState","useEffect","Header","SearchFilter","AddPeopleForm","Persons","personService","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filteredPersons","setFilteredPersons","getAll","then","peopleList","console","log","handleNameChange","event","target","value","handleNumberChange","handleSearch","searchEntry","toLowerCase","length","filter","person","name","includes","checkDuplicatePerson","find","p","concatPersonLists","personObject","concat","addPerson","alertText","preventDefault","number","alert","create","personList","deletePerson","id","deleteObject"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEU,OAAF,EAAWC,UAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEY,SAAF,EAAaC,YAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAEc,eAAF,EAAmBC,kBAAnB,IAA0Cf,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,aAAa,CACVU,MADH,GAEGC,IAFH,CAEQC,UAAU,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,UAA5B;AACAT,MAAAA,UAAU,CAACS,UAAD,CAAV;AACAH,MAAAA,kBAAkB,CAACG,UAAD,CAAlB;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMG,gBAAgB,GAAIC,KAAD,IAAWX,UAAU,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA9C;;AAEA,QAAMC,kBAAkB,GAAIH,KAAD,IAAWT,YAAY,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlD;;AAEA,QAAME,YAAY,GAAIJ,KAAD,IAAW;AAC9B,QAAIK,WAAW,GAAIL,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAqBI,WAArB,EAAlB;;AAEA,QAAGD,WAAW,CAACE,MAAZ,GAAqB,CAAxB,EAA2B;AACzBd,MAAAA,kBAAkB,CAACP,OAAO,CAACsB,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYJ,WAAZ,GAA0BK,QAA1B,CAAmCN,WAAnC,CAAzB,CAAD,CAAlB;AACD,KAFD,MAEO;AACLZ,MAAAA,kBAAkB,CAAC,CAAC,GAAGP,OAAJ,CAAD,CAAlB;AACD;AACF,GARD;;AAUA,QAAM0B,oBAAoB,GAAIH,MAAD,IAAY;AACvC,QAAIvB,OAAO,CAAC2B,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACJ,IAAF,KAAWD,MAAM,CAACC,IAApC,CAAJ,EAA+C;AAC7C,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GALD;;AAOA,QAAMK,iBAAiB,GAAIC,YAAD,IAAkB;AAC1C7B,IAAAA,UAAU,CAACD,OAAO,CAAC+B,MAAR,CAAeD,YAAf,CAAD,CAAV;AACAvB,IAAAA,kBAAkB,CAACP,OAAO,CAAC+B,MAAR,CAAeD,YAAf,CAAD,CAAlB;AACD,GAHD;;AAKA,QAAME,SAAS,GAAIlB,KAAD,IAAW;AAC3B,UAAMmB,SAAS,GAAI,GAAE/B,OAAQ,kCAA7B;AACAY,IAAAA,KAAK,CAACoB,cAAN;AACA,UAAMJ,YAAY,GAAG;AACnBN,MAAAA,IAAI,EAAEtB,OADa;AAEnBiC,MAAAA,MAAM,EAAE/B;AAFW,KAArB;;AAKA,QAAGsB,oBAAoB,CAACI,YAAD,CAAvB,EAAuC;AACrCM,MAAAA,KAAK,CAACH,SAAD,CAAL;AACD,KAFD,MAEO;AACLnC,MAAAA,aAAa,CACVuC,MADH,CACUP,YADV,EAEGrB,IAFH,CAEQ6B,UAAU,IAAI;AAClBT,QAAAA,iBAAiB,CAACS,UAAD,CAAjB;AACAnC,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,OANH;AAOD;AACF,GAnBD;;AAqBA,QAAMkC,YAAY,GAAIC,EAAD,IAAQ;AAC3B1C,IAAAA,aAAa,CACV2C,YADH,CACgBD,EADhB,EAEG/B,IAFH,CAEQ,MAAM;AACVE,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAL,MAAAA,kBAAkB,CAACD,eAAe,CAACgB,MAAhB,CAAuBC,MAAM,IAAIA,MAAM,CAACiB,EAAP,KAAcA,EAA/C,CAAD,CAAlB;AACAvC,MAAAA,UAAU,CAACK,eAAD,CAAV;AACD,KANH;AAOD,GARD;;AAUA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAC,mBAAnB;AAAuC,MAAA,YAAY,EAAEY;AAArD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,aAAD;AACE,MAAA,gBAAgB,EAAEL,gBADpB;AAEE,MAAA,kBAAkB,EAAEI,kBAFtB;AAGE,MAAA,SAAS,EAAEe,SAHb;AAIE,MAAA,OAAO,EAAE9B,OAJX;AAIoB,MAAA,SAAS,EAAEE;AAJ/B;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,OAAD;AAAS,MAAA,eAAe,EAAEE,eAA1B;AAA2C,MAAA,YAAY,EAAEiC;AAAzD;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAxFD;;GAAMxC,G;;KAAAA,G;AA0FN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport Header from './components/Header'\nimport SearchFilter from './components/SearchFilter'\nimport AddPeopleForm from './components/AddPeopleForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filteredPersons, setFilteredPersons ] = useState([])\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(peopleList => {\n        console.log(\"initial data\", peopleList);\n        setPersons(peopleList)\n        setFilteredPersons(peopleList)\n      })\n  }, [])\n\n  const handleNameChange = (event) => setNewName(event.target.value);\n\n  const handleNumberChange = (event) => setNewNumber(event.target.value); \n\n  const handleSearch = (event) => {\n    let searchEntry = (event.target.value).toLowerCase()\n\n    if(searchEntry.length > 0) {\n      setFilteredPersons(persons.filter(person => person.name.toLowerCase().includes(searchEntry)))\n    } else {\n      setFilteredPersons([...persons])\n    }\n  }\n\n  const checkDuplicatePerson = (person) => {\n    if (persons.find(p => p.name === person.name)) {\n      return true\n    }\n    return false\n  }\n\n  const concatPersonLists = (personObject) => {\n    setPersons(persons.concat(personObject))\n    setFilteredPersons(persons.concat(personObject))\n  }\n\n  const addPerson = (event) => {\n    const alertText = `${newName} already exists in the phonebook`\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if(checkDuplicatePerson(personObject)) {\n      alert(alertText)\n    } else {\n      personService\n        .create(personObject)\n        .then(personList => {\n          concatPersonLists(personList)\n          setNewName('');\n          setNewNumber('');\n        })\n    }\n  }\n\n  const deletePerson = (id) => {\n    personService\n      .deleteObject(id)\n      .then(() => {\n        console.log(\"Deleting\");\n        setFilteredPersons(filteredPersons.filter(person => person.id !== id))\n        setPersons(filteredPersons)\n      })\n  }\n\n  return (\n    <div>\n      <Header text=\"Phonebook\" />\n      <SearchFilter text=\"filter shown with\" handleSearch={handleSearch} />\n      <Header text=\"add a new\" />\n      <AddPeopleForm \n        handleNameChange={handleNameChange} \n        handleNumberChange={handleNumberChange} \n        addPerson={addPerson} \n        newName={newName} newNumber={newNumber} \n      />\n      <Header text=\"Numbers\" />\n      <Persons filteredPersons={filteredPersons} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}