{"ast":null,"code":"var _jsxFileName = \"/Users/ahmed/Documents/PrintLearning/fullstackopen-2021/Part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport SearchFilter from './components/SearchFilter';\nimport AddPeopleForm from './components/AddPeopleForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport personService from './services/personService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filteredPersons, setFilteredPersons] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [errorStatus, setErrorStatus] = useState(true);\n  useEffect(() => {\n    personService.getAll().then(peopleList => {\n      console.log(\"initial data\", peopleList);\n      setPersons(peopleList);\n      setFilteredPersons(peopleList);\n    });\n  }, []);\n\n  const handleNameChange = event => setNewName(event.target.value);\n\n  const handleNumberChange = event => setNewNumber(event.target.value);\n\n  const handleSearch = event => {\n    let searchEntry = event.target.value.toLowerCase();\n\n    if (searchEntry.length > 0) {\n      setFilteredPersons(persons.filter(person => person.name.toLowerCase().includes(searchEntry)));\n    } else {\n      setFilteredPersons([...persons]);\n    }\n  };\n\n  const handleNotifications = (message, status) => {\n    setErrorMessage(message);\n    setErrorStatus(status);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 5000);\n  };\n\n  const checkDuplicatePerson = person => {\n    let foundID = persons.find(p => p.name === person.name) ? persons.find(p => p.name === person.name).id : 0;\n\n    if (foundID === 0) {\n      return false;\n    }\n\n    return foundID;\n  };\n\n  const concatPersonLists = personObject => {\n    setPersons(persons.concat(personObject));\n    setFilteredPersons(persons.concat(personObject));\n  };\n\n  const addPerson = event => {\n    const alertText = `${newName} already exists. Update their phone number?`;\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber\n    };\n    let foundID = checkDuplicatePerson(personObject);\n\n    if (foundID) {\n      if (window.confirm(alertText)) {\n        personService.update(foundID, personObject).then(updatedPerson => {\n          handleNotifications(`Changed number of ${personObject.name}`, false);\n          setFilteredPersons(filteredPersons.map(person => person.name === newName ? updatedPerson : person));\n          setPersons(filteredPersons);\n        });\n      }\n    } else {\n      personService.create(personObject).then(personList => {\n        handleNotifications(`${personObject.name} was added to the list`, false);\n        concatPersonLists(personList);\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  };\n\n  const deletePerson = (name, id) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personService.deleteObject(id).then(() => {\n        handleNotifications(`${name} was removed from the list`, false);\n        setFilteredPersons(filteredPersons.filter(person => person.id !== id));\n        setPersons(filteredPersons);\n      }).catch(error => {\n        console.log(\"Caught Error\", error);\n        handleNotifications(`${name} has already been removed from the list`, true);\n        setFilteredPersons(filteredPersons.filter(person => person.id !== id));\n        setPersons(filteredPersons);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage,\n      errorStatus: errorStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchFilter, {\n      text: \"filter shown with\",\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: \"add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPeopleForm, {\n      handleNameChange: handleNameChange,\n      handleNumberChange: handleNumberChange,\n      addPerson: addPerson,\n      newName: newName,\n      newNumber: newNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      filteredPersons: filteredPersons,\n      deletePerson: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"RHVf1hIyjNBcoSpVvIVRvr3kAk8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ahmed/Documents/PrintLearning/fullstackopen-2021/Part2/phonebook/src/App.js"],"names":["React","useState","useEffect","Header","SearchFilter","AddPeopleForm","Persons","Notification","personService","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filteredPersons","setFilteredPersons","errorMessage","setErrorMessage","errorStatus","setErrorStatus","getAll","then","peopleList","console","log","handleNameChange","event","target","value","handleNumberChange","handleSearch","searchEntry","toLowerCase","length","filter","person","name","includes","handleNotifications","message","status","setTimeout","checkDuplicatePerson","foundID","find","p","id","concatPersonLists","personObject","concat","addPerson","alertText","preventDefault","number","window","confirm","update","updatedPerson","map","create","personList","deletePerson","deleteObject","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEW,OAAF,EAAWC,UAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEa,SAAF,EAAaC,YAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAEe,eAAF,EAAmBC,kBAAnB,IAA0ChB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAAEiB,YAAF,EAAgBC,eAAhB,IAAoClB,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAAEmB,WAAF,EAAeC,cAAf,IAAkCpB,QAAQ,CAAC,IAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,aAAa,CACVc,MADH,GAEGC,IAFH,CAEQC,UAAU,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,UAA5B;AACAb,MAAAA,UAAU,CAACa,UAAD,CAAV;AACAP,MAAAA,kBAAkB,CAACO,UAAD,CAAlB;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMG,gBAAgB,GAAIC,KAAD,IAAWf,UAAU,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA9C;;AAEA,QAAMC,kBAAkB,GAAIH,KAAD,IAAWb,YAAY,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlD;;AAEA,QAAME,YAAY,GAAIJ,KAAD,IAAW;AAC9B,QAAIK,WAAW,GAAIL,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAqBI,WAArB,EAAlB;;AAEA,QAAGD,WAAW,CAACE,MAAZ,GAAqB,CAAxB,EAA2B;AACzBlB,MAAAA,kBAAkB,CAACP,OAAO,CAAC0B,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYJ,WAAZ,GAA0BK,QAA1B,CAAmCN,WAAnC,CAAzB,CAAD,CAAlB;AACD,KAFD,MAEO;AACLhB,MAAAA,kBAAkB,CAAC,CAAC,GAAGP,OAAJ,CAAD,CAAlB;AACD;AACF,GARD;;AAUA,QAAM8B,mBAAmB,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/CvB,IAAAA,eAAe,CAACsB,OAAD,CAAf;AACApB,IAAAA,cAAc,CAACqB,MAAD,CAAd;AACAC,IAAAA,UAAU,CAAC,MAAM;AACfxB,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAND;;AAQA,QAAMyB,oBAAoB,GAAIP,MAAD,IAAY;AACvC,QAAIQ,OAAO,GAAGnC,OAAO,CAACoC,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACT,IAAF,KAAWD,MAAM,CAACC,IAApC,IAA6C5B,OAAO,CAACoC,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACT,IAAF,KAAWD,MAAM,CAACC,IAApC,CAAD,CAA4CU,EAAxF,GAA6F,CAA3G;;AACA,QAAIH,OAAO,KAAK,CAAhB,EAAmB;AACjB,aAAO,KAAP;AACD;;AACD,WAAOA,OAAP;AACD,GAND;;AAQA,QAAMI,iBAAiB,GAAIC,YAAD,IAAkB;AAC1CvC,IAAAA,UAAU,CAACD,OAAO,CAACyC,MAAR,CAAeD,YAAf,CAAD,CAAV;AACAjC,IAAAA,kBAAkB,CAACP,OAAO,CAACyC,MAAR,CAAeD,YAAf,CAAD,CAAlB;AACD,GAHD;;AAKA,QAAME,SAAS,GAAIxB,KAAD,IAAW;AAC3B,UAAMyB,SAAS,GAAI,GAAEzC,OAAQ,6CAA7B;AACAgB,IAAAA,KAAK,CAAC0B,cAAN;AACA,UAAMJ,YAAY,GAAG;AACnBZ,MAAAA,IAAI,EAAE1B,OADa;AAEnB2C,MAAAA,MAAM,EAAEzC;AAFW,KAArB;AAKA,QAAI+B,OAAO,GAAGD,oBAAoB,CAACM,YAAD,CAAlC;;AACA,QAAGL,OAAH,EAAY;AACV,UAAGW,MAAM,CAACC,OAAP,CAAeJ,SAAf,CAAH,EAA8B;AAC5B7C,QAAAA,aAAa,CACVkD,MADH,CACUb,OADV,EACmBK,YADnB,EAEG3B,IAFH,CAEQoC,aAAa,IAAI;AACrBnB,UAAAA,mBAAmB,CAAE,qBAAoBU,YAAY,CAACZ,IAAK,EAAxC,EAA2C,KAA3C,CAAnB;AACArB,UAAAA,kBAAkB,CAACD,eAAe,CAAC4C,GAAhB,CAAoBvB,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgB1B,OAAhB,GAA0B+C,aAA1B,GAA0CtB,MAAxE,CAAD,CAAlB;AACA1B,UAAAA,UAAU,CAACK,eAAD,CAAV;AACD,SANH;AAOD;AACF,KAVD,MAUO;AACLR,MAAAA,aAAa,CACVqD,MADH,CACUX,YADV,EAEG3B,IAFH,CAEQuC,UAAU,IAAI;AAClBtB,QAAAA,mBAAmB,CAAE,GAAEU,YAAY,CAACZ,IAAK,wBAAtB,EAA+C,KAA/C,CAAnB;AACAW,QAAAA,iBAAiB,CAACa,UAAD,CAAjB;AACAjD,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,OAPH;AAQD;AACF,GA7BD;;AA+BA,QAAMgD,YAAY,GAAG,CAACzB,IAAD,EAAOU,EAAP,KAAc;AACjC,QAAGQ,MAAM,CAACC,OAAP,CAAgB,UAASnB,IAAK,GAA9B,CAAH,EAAsC;AACpC9B,MAAAA,aAAa,CACZwD,YADD,CACchB,EADd,EAECzB,IAFD,CAEM,MAAM;AACViB,QAAAA,mBAAmB,CAAE,GAAEF,IAAK,4BAAT,EAAsC,KAAtC,CAAnB;AACArB,QAAAA,kBAAkB,CAACD,eAAe,CAACoB,MAAhB,CAAuBC,MAAM,IAAIA,MAAM,CAACW,EAAP,KAAcA,EAA/C,CAAD,CAAlB;AACArC,QAAAA,UAAU,CAACK,eAAD,CAAV;AACD,OAND,EAOCiD,KAPD,CAOOC,KAAK,IAAI;AACdzC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BwC,KAA5B;AACA1B,QAAAA,mBAAmB,CAAE,GAAEF,IAAK,yCAAT,EAAmD,IAAnD,CAAnB;AACArB,QAAAA,kBAAkB,CAACD,eAAe,CAACoB,MAAhB,CAAuBC,MAAM,IAAIA,MAAM,CAACW,EAAP,KAAcA,EAA/C,CAAD,CAAlB;AACArC,QAAAA,UAAU,CAACK,eAAD,CAAV;AACD,OAZD;AAaD;AACF,GAhBD;;AAkBA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEE,YAAvB;AAAqC,MAAA,WAAW,EAAEE;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAC,mBAAnB;AAAuC,MAAA,YAAY,EAAEY;AAArD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,aAAD;AACE,MAAA,gBAAgB,EAAEL,gBADpB;AAEE,MAAA,kBAAkB,EAAEI,kBAFtB;AAGE,MAAA,SAAS,EAAEqB,SAHb;AAIE,MAAA,OAAO,EAAExC,OAJX;AAIoB,MAAA,SAAS,EAAEE;AAJ/B;AAAA;AAAA;AAAA;AAAA,YALF,eAWE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,OAAD;AAAS,MAAA,eAAe,EAAEE,eAA1B;AAA2C,MAAA,YAAY,EAAE+C;AAAzD;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAtHD;;GAAMtD,G;;KAAAA,G;AAwHN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport Header from './components/Header'\nimport SearchFilter from './components/SearchFilter'\nimport AddPeopleForm from './components/AddPeopleForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/personService'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filteredPersons, setFilteredPersons ] = useState([])\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  const [ errorStatus, setErrorStatus ] = useState(true)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(peopleList => {\n        console.log(\"initial data\", peopleList);\n        setPersons(peopleList)\n        setFilteredPersons(peopleList)\n      })\n  }, [])\n\n  const handleNameChange = (event) => setNewName(event.target.value);\n\n  const handleNumberChange = (event) => setNewNumber(event.target.value); \n\n  const handleSearch = (event) => {\n    let searchEntry = (event.target.value).toLowerCase()\n\n    if(searchEntry.length > 0) {\n      setFilteredPersons(persons.filter(person => person.name.toLowerCase().includes(searchEntry)))\n    } else {\n      setFilteredPersons([...persons])\n    }\n  }\n\n  const handleNotifications = (message, status) => {\n    setErrorMessage(message)\n    setErrorStatus(status)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n  const checkDuplicatePerson = (person) => {\n    let foundID = persons.find(p => p.name === person.name) ? (persons.find(p => p.name === person.name)).id : 0 \n    if (foundID === 0) {\n      return false\n    }\n    return foundID\n  }\n\n  const concatPersonLists = (personObject) => {\n    setPersons(persons.concat(personObject))\n    setFilteredPersons(persons.concat(personObject))\n  }\n\n  const addPerson = (event) => {\n    const alertText = `${newName} already exists. Update their phone number?`\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    let foundID = checkDuplicatePerson(personObject)\n    if(foundID) {\n      if(window.confirm(alertText)) {\n        personService\n          .update(foundID, personObject)\n          .then(updatedPerson => {\n            handleNotifications(`Changed number of ${personObject.name}`, false)\n            setFilteredPersons(filteredPersons.map(person => person.name === newName ? updatedPerson : person))\n            setPersons(filteredPersons)\n          })\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then(personList => {\n          handleNotifications(`${personObject.name} was added to the list`, false)\n          concatPersonLists(personList)\n          setNewName('');\n          setNewNumber('');\n        })\n    }\n  }\n\n  const deletePerson = (name, id) => {\n    if(window.confirm(`Delete ${name}?`)) {\n      personService\n      .deleteObject(id)\n      .then(() => {\n        handleNotifications(`${name} was removed from the list`, false)\n        setFilteredPersons(filteredPersons.filter(person => person.id !== id))\n        setPersons(filteredPersons)\n      })\n      .catch(error => {\n        console.log(\"Caught Error\", error);\n        handleNotifications(`${name} has already been removed from the list`, true)\n        setFilteredPersons(filteredPersons.filter(person => person.id !== id))\n        setPersons(filteredPersons)\n      })\n    } \n  }\n\n  return (\n    <div>\n      <Notification message={errorMessage} errorStatus={errorStatus} />\n      <Header text=\"Phonebook\" />\n      <SearchFilter text=\"filter shown with\" handleSearch={handleSearch} />\n      <Header text=\"add a new\" />\n      <AddPeopleForm \n        handleNameChange={handleNameChange} \n        handleNumberChange={handleNumberChange} \n        addPerson={addPerson} \n        newName={newName} newNumber={newNumber} \n      />\n      <Header text=\"Numbers\" />\n      <Persons filteredPersons={filteredPersons} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}